apiVersion: v1
kind: Secret
metadata:
  name: pg-secret
  namespace: acl
type: Opaque
stringData:
  POSTGRES_DB: appdb
  POSTGRES_USER: appuser
  POSTGRES_PASSWORD: apppassword
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-init-sql
  namespace: acl
data:
  01_schema.sql: |
    CREATE TABLE IF NOT EXISTS users (
      id SERIAL PRIMARY KEY,
      username TEXT NOT NULL,
      email TEXT NOT NULL,
      active BOOLEAN NOT NULL DEFAULT TRUE,
      created_at TIMESTAMP NOT NULL DEFAULT NOW()
    );
  02_seed.sql: |
    INSERT INTO users (username, email, active) VALUES
      ('alice','alice@example.com',true),
      ('bob','bob@example.com',true),
      ('carol','carol@example.com',false)
    ON CONFLICT DO NOTHING;
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: acl
spec:
  ports:
    - port: 5432
      name: pg
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: acl
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
              name: pg
          envFrom:
            - secretRef:
                name: pg-secret
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-sql
          configMap:
            name: pg-init-sql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
